# a list of env vars that nginx will make avaliable for configuration files and Lua code
env POSTGREST_HOST;
env POSTGREST_PORT;
env JWT_SECRET;
env DB_SCHEMA;
env DB_HOST;
env DB_PORT;
env DB_NAME;
env DB_USER;
env DB_PASS;
env DEVELOPMENT;
env RELAY_ID_COLUMN;
env RABBITMQ_HOST;
env RABBITMQ_PORT;
env ENABLE_CACHE;

load_module modules/ngx_http_lua_cache_module.so;

worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include mime.types;
    
    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '${prefix}../lualib/user_code/?.lua;;';
    init_by_lua_file '../lualib/user_code/init_phase.lua';
    
    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=api_cache:50m max_size=3000m inactive=600m;
    lua_shared_dict cache_tags 10m;
    
    # a shorter log format for development
    log_format development '[$time_local] "$request" $status $body_bytes_sent "$request_time ms"';
    
    resolver 127.0.0.11 ipv6=off;
    
    server {
        listen 80 default_server;
        server_name _;
        charset utf-8;
        # uninitialized_variable_warn off;
        

        #depending the env (production/development) switch between log formats
        set_by_lua_block $development  { return os.getenv('DEVELOPMENT') or "0" }
        set $log_development 0;
        set $log_production 0;
        if ($development = "1") {
            set $log_development 1;
        }
        if ($development = "0") {
            set $log_production 1;
        }
        access_log logs/access.log combined    if=$log_production;
        access_log logs/access.log development if=$log_development;
        
        # enable gzip compression
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/vnd.pgrst.object+json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        
        include rest.conf;
        include graphql.conf;
        include rabbitmq.conf;

        # this is the last location in the chain that points to html directory
        # this is where the files of your frontend application would go (html/javascript/css)
        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}
