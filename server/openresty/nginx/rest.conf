# variable used by lua code, needs to match line below
set $rest_prefix "/rest";

# user facing location for the rest api
location /rest {
    include cors.conf;

    # turn session cookie into authorization header
    if ($cookie_SESSIONID != ""){
        more_set_input_headers 'Authorization: Bearer $cookie_SESSIONID';
    }

    # rewrite for the main internal location
    rewrite ^/rest/(.*)$ /internal/rest/$1;
}

# main internal location that will farward requests to PostgREST
location /internal/rest/ {
    # this location is only avalable through internal redirects
    internal;
    default_type  application/json;

    rewrite_by_lua_file '../lualib/user_code/internal_rest_rewrite_phase.lua';
    header_filter_by_lua_file '../lualib/user_code/internal_rest_header_filter_phase.lua';
    body_filter_by_lua_file '../lualib/user_code/internal_rest_body_filter_phase.lua';

    # Cache with nginx internals
    set_by_lua_block $cache_bypass { return os.getenv('ENABLE_CACHE') == '1' and '0' or "1" }
    set $cache_key '';
    set $cache_ttl '';
    proxy_cache api_cache;
    proxy_ignore_headers "Expires" "Cache-Control";
    proxy_cache_key $cache_key;
    proxy_cache_bypass $cache_bypass;

    proxy_set_header  Accept-Encoding  ""; #force postgrest not to gzip the output
    proxy_set_header  Connection ""; #optimise communication with upstream (keep alive)
    proxy_set_header  Host $host;
    proxy_http_version 1.1;
    set_by_lua_block $postgrest_host  { return os.getenv('POSTGREST_HOST') or "0" }
    set_by_lua_block $postgrest_port  { return os.getenv('POSTGREST_PORT') or "0" }
    proxy_pass http://$postgrest_host:$postgrest_port; # Reverse proxy to your PostgREST
    
    # Rewrite the Content-Location header to match our location
    proxy_hide_header Content-Location;
    set_by_lua_block $rest_prefix  { return ngx.var.rest_prefix or "/rest" } # this needs to match user facing location path
    more_set_headers 'Content-Location: $rest_prefix$upstream_http_content_location';

    # Debug Info
    if ($development = "1") {
        more_set_headers 'Request-Time: $request_time';
        more_set_headers 'Method: $echo_request_method';
        more_set_headers 'Cache-Engine: "nginx"';
        more_set_headers 'Cache-Status: $upstream_cache_status';
        more_set_headers 'Cache-Key: $cache_key';
        more_set_headers 'Cache-TTL: $cache_ttl';
    }

    # this needs to be at the end
    rewrite    /internal/rest(.+) $1 break;
}